name: Weekly Epic Games Collector

on:
  schedule:
    - cron: '0 0 * * 0'  # –ó–∞–ø—É—Å–∫ –∫–∞–∂–¥–æ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –≤ 00:00 UTC
    - cron: '0 0 * * 5'  # –ó–∞–ø—É—Å–∫ –∫–∞–∂–¥—É—é –ø—è—Ç–Ω–∏—Ü—É –≤ 00:00 UTC
  workflow_dispatch:  # –ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å –≤—Ä—É—á–Ω—É—é
  # Test comment

jobs:
  collect-games:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        cache: 'pip'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb
        
    - name: Set up virtual environment
      run: |
        python -m venv .venv
        source .venv/bin/activate
        python -m pip install --upgrade pip
        
    - name: Install Python dependencies
      run: |
        cd epic-awesome-gamer-main
        source ../.venv/bin/activate
        pip install -e .
        if [ $? -ne 0 ]; then
          echo "Failed to install dependencies"
          exit 1
        fi
        
    - name: Run Epic Games Collector
      id: run_script
      run: |
        cd epic-awesome-gamer-main
        source ../.venv/bin/activate
        echo "Creating accounts.json..."
        echo '${{ secrets.EPIC_ACCOUNTS }}' > accounts.json
        echo "Creating .env file..."
        echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" > .env
        echo "Starting script..."
        echo "Python version:"
        python --version
        echo "Installed packages:"
        pip list
        echo "Running script..."
        PYTHONUNBUFFERED=1 xvfb-run python -m epic_awesome_gamer.cli.main collect 2>&1 | tee output.log
        SCRIPT_EXIT_CODE=$?
        echo "Script finished with exit code: $SCRIPT_EXIT_CODE"
        if [ $SCRIPT_EXIT_CODE -ne 0 ]; then
          echo "Script execution failed"
          exit $SCRIPT_EXIT_CODE
        fi
        
    - name: Show output
      if: always()
      run: |
        echo "=== Script Output ==="
        LOG_FILE="epic-awesome-gamer-main/output.log"
        if [ -f "$LOG_FILE" ]; then
          echo "Output log file found: $LOG_FILE"
          echo "=== Last 100 lines of log ==="
          tail -n 100 "$LOG_FILE"
          echo "=== End of log ==="
        else
          echo "Output log file NOT found at: $LOG_FILE"
          echo "Current directory contents:"
          ls -la
        fi

    - name: Send Telegram notification
      if: always() # –í—ã–ø–æ–ª–Ω—è—Ç—å –≤—Å–µ–≥–¥–∞, –¥–∞–∂–µ –µ—Å–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —à–∞–≥–∏ —É–ø–∞–ª–∏
      run: |
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è job'–∞
        if [ "${{ job.status }}" = "success" ]; then
          MESSAGE="‚úÖ GitHub Actions Workflow —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω.
          
          üîÑ –†–∞–±–æ—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞: ${{ github.workflow }}
          üìÖ –î–∞—Ç–∞: $(date '+%Y-%m-%d %H:%M:%S')
          üîó –°—Å—ã–ª–∫–∞: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        else
          MESSAGE="‚ùå GitHub Actions Workflow –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–æ–π.
          
          üîÑ –†–∞–±–æ—Ç–∞: ${{ github.workflow }}
          üìÖ –î–∞—Ç–∞: $(date '+%Y-%m-%d %H:%M:%S')
          üîó –°—Å—ã–ª–∫–∞: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        fi
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram
        curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
          -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
          -d text="$MESSAGE" \
          -d parse_mode="HTML" \
          -d disable_web_page_preview=true